/**
 * Given a list of non negative integers, arrange them such that they form the 
 * largest number.
 *
 * Example 1:
 * Input: [10,2]
 * Output: "210"
 * 
 * Example 2:
 * Input: [3,30,34,5,9]
 * Output: "9534330"
 * 
 * Note: The result may be very large, so you need to return a string instead 
 * of an integer. */
 
// Approach #1: Sort. Time->O(nlogn).
class Solution {
    public String largestNumber(int[] nums) {
        String[] strNums = new String[nums.length];
        for (int i = 0; i < nums.length; ++ i) {
            strNums[i] = String.valueOf(nums[i]);
        }
        
        Arrays.sort(strNums, new Comparator<String>(){
            public int compare(String a, String b) {
                String x = a + b;
                String y = b + a;
                return y.compareTo(x);
            }
        });
        
        if (strNums[0].equals("0"))
            return "0";
        
        StringBuilder res = new StringBuilder();
        for (String s: strNums) {
            res.append(s);
        }
        return res.toString();
    }
}
