/**
 * The string "PAYPALISHIRING" is written in a zigzag pattern on a given number of rows like this: (you 
 * may want to display this pattern in a fixed font for better legibility)
 *
 * P   A   H   N
 * A P L S I I G
 * Y   I   R
 * And then read line by line: "PAHNAPLSIIGYIR"
 *
 * Write the code that will take a string and make this conversion given a number of rows:
 * string convert(string s, int numRows);
 *
 * Example 1:
 * Input: s = "PAYPALISHIRING", numRows = 3
 * Output: "PAHNAPLSIIGYIR"
 * 
 * Example 2:
 * Input: s = "PAYPALISHIRING", numRows = 4
 * Output: "PINALSIGYAHRPI"
 * Explanation:
 * P     I    N
 * A   L S  I G
 * Y A   H R
 * P     I
 *
 * More solutions see https://leetcode.com/articles/zigzag-conversion/
 */
 
// Mathematical solution. Time complexity: O(n).
class Solution {
    public String convert(String s, int numRows) {
        if (s == null || s.length() < 1 || numRows == 1) {
            return s;
        }
        
        StringBuilder res = new StringBuilder();
        char[] ch = s.toCharArray();
        // First row.
        for (int i = 0; i < ch.length; i += 2 * numRows - 2) {
            res.append(ch[i]);
        }
        // Middle
        for (int i = 1; i < numRows - 1; ++i) {
            for (int j = i; j < ch.length; j += 2 * numRows - 2) {
                res.append(ch[j]);
                if (j + 2 * (numRows - i - 1) < ch.length) {
                    res.append(ch[j + 2 * (numRows - i - 1)]);
                }
            }
        }
        // Last row.
        for (int i = numRows - 1; i < ch.length; i += 2 * numRows - 2) {
            res.append(ch[i]);
        }
        
        return res.toString();
    }
}
