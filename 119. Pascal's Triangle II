/**
 * Given a non-negative index k where k â‰¤ 33, return the kth index row of the 
 * Pascal's triangle. Note that the row index starts from 0.
 * 
 * Example:
 * Input: 3
 * Output: [1,3,3,1]
 * 
 * Follow up:
 * - Could you optimize your algorithm to use only O(k) extra space?
 */
 
// Space complexity: O(k) 
class Solution {
    public List<Integer> getRow(int rowIndex) {
        List<Integer> ret = new ArrayList<>();
        ret.add(1);
        if (rowIndex == 0) {
            return ret;
        }
        ret.add(1);
        if (rowIndex == 1) {
            return ret;
        }
        for (int i = 0; i < rowIndex - 1; ++i) {
            ret.add(1, ret.get(0) + ret.get(1));
            for (int j = 2; j < ret.size() - 1; ++j) {
                ret.set(j, ret.get(j) + ret.get(j + 1));
            }
        }
        return ret;
    }
}
