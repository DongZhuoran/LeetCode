/**
 * We are playing the Guess Game. The game is as follows:
 * I pick a number from 1 to n. You have to guess which number I picked. Every time you guess 
 * wrong, I'll tell you whether the number I picked is higher or lower. However, when you guess 
 * a particular number x, and you guess wrong, you pay $x. You win the game when you guess the 
 * number I picked.
 *
 * Example:
 * n = 10, I pick 8.
 * First round:  You guess 5, I tell you that it's higher. You pay $5.
 * Second round: You guess 7, I tell you that it's higher. You pay $7.
 * Third round:  You guess 9, I tell you that it's lower. You pay $9.
 * Game over. 8 is the number I picked.
 * You end up paying $5 + $7 + $9 = $21.
 * 
 * Given a particular n â‰¥ 1, find out how much money you need to have to guarantee a win.
 */

// dp solution
class Solution {
    public int getMoneyAmount(int n) {
        int[][] d = new int[n + 1][n + 1];
        return dp(d, 1, n);
    }
    
    public int dp(int[][] d, int start, int end) {
        if (start >= end) {
            return 0;
        }
        if (d[start][end] != 0) {
            return d[start][end];
        }
        int ret = Integer.MAX_VALUE;
        for (int i = start; i <= end; ++i) {
            int x = i + Math.max(dp(d, start, i - 1), dp(d, i + 1, end));
            ret = Math.min(ret, x);
        }
        d[start][end] = ret;
        return ret;
    }
}
