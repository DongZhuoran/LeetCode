// Given a 2d grid map of '1's (land) and '0's (water), count the number of islands. 
// An island is surrounded by water and is formed by connecting adjacent lands horizontally 
// or vertically. You may assume all four edges of the grid are all surrounded by water.
//
// Example 1:
// Input:
// 11110
// 11010
// 11000
// 00000
// Output: 1
// 
// Example 2:
// Input:
// 11000
// 11000
// 00100
// 00011
// Output: 3


class Solution {
    char[][] g;
    int count;
    
    public int numIslands(char[][] grid) {
        g = grid;
        count = 0;
        
        for (int i = 0; i < grid.length; ++i) {
            for (int j = 0; j < grid[0].length; ++j) {
                count += sink(i, j);
            }
        }
        
        return count;
    }
    
    public int sink(int i, int j) {
        if (i < 0 || i == g.length || j < 0 || j == g[0].length || g[i][j] == '0') {
            return 0;
        }
        g[i][j] = '0';
        sink(i + 1, j);
        sink(i - 1, j);
        sink(i, j + 1);
        sink(i, j - 1);
        return 1;
    }
}
