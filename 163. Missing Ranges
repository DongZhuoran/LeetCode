/**
 * Given a sorted integer array nums, where the range of elements are in the inclusive range 
 * [lower, upper], return its missing ranges.
 *
 * Example:
 * Input: nums = [0, 1, 3, 50, 75], lower = 0 and upper = 99,
 * Output: ["2", "4->49", "51->74", "76->99"]
 */
 
// Apporach #1: brute force
class Solution:
    def findMissingRanges(self, nums: list[int], lower: int, upper: int) -> List[]:
        def getRange(n1, n2):
            return str(n1) if n1 == n2 else '%d->%d' % (n1, n2)
        
        if not nums:
            return [str(lower) + '->' + str(upper)]
        
        ranges = []
        n = len(nums)
        start = lower
        for i in range(n):
            while i < n - 1 and nums[i] == nums[i + 1]:
                i += 1
            if start == nums[i]:
                start += 1
            else:
                ranges.append(getRange(start, nums[i] - 1))
                if nums[i] == math.inf:
                    return ranges
                start = nums[i] + 1
        if start <= upper:
            ranges.append(getRange(start, upper))
        return ranges
                
