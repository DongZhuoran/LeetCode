/**
 * Given two integers representing the numerator and denominator of a fraction, return the 
 * fraction in string format.
 *
 * If the fractional part is repeating, enclose the repeating part in parentheses.
 *
 * Example 1:
 * Input: numerator = 1, denominator = 2
 * Output: "0.5"
 *
 * Example 2:
 * Input: numerator = 2, denominator = 1
 * Output: "2"
 *
 * Example 3:
 * Input: numerator = 2, denominator = 3
 * Output: "0.(6)"
 */
 
// Approach #1: Straightforward.
class Solution {
    public String fractionToDecimal(int numerator, int denominator) {
        return helper(numerator, denominator);
    }
    
    private String helper(long numerator, long denominator) {
        if (numerator == 0) return "0";
        
        StringBuilder res = new StringBuilder();
        
        if ((numerator < 0 && denominator > 0) || (numerator > 0 && denominator < 0))
            res.append("-");
        numerator = Math.abs(numerator);
        denominator = Math.abs(denominator);
        
        res.append(numerator / denominator);
        long mod = numerator % denominator;
        if (mod == 0) return res.toString();
        res.append(".");
        
        Map<Long, Integer> map = new HashMap<>();
        map.put(mod, res.length());
        while (mod > 0) {
            mod *= 10;
            res.append(mod / denominator);
            mod = mod % denominator;
            if (map.containsKey(mod)) break;
            else map.put(mod, res.length());
        }
        
        if (mod > 0) {
            res.insert(map.get(mod), "(");
            res.append(")");
        }
        return res.toString();
    }
}
