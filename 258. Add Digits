/**
 * Given a non-negative integer num, repeatedly add all its digits until the result has only one digit.
 *
 * Example:
 * Input: 38
 * Output: 2 
 * Explanation: The process is like: 3 + 8 = 11, 1 + 1 = 2. 
 *              Since 2 has only one digit, return it.
 *
 * Follow up:
 * Could you do it without any loop/recursion in O(1) runtime?
 */

// 1. adding 9 to a number won't change its digit root
// 2. if digit root of a is i, b = a + j -> digit root of b = digit root of (i + j)
// 3. any given number x can be represented as x = 9a + b, where b < 9
// 4. digit root of 9a = (9 + 9 + ... + 9) = 9
class Solution {
    public int addDigits(int num) {
        if (num == 0) {
            return 0;
        }
        int res = num % 9;
        return res == 0 ? 9 : res;
    }
}
