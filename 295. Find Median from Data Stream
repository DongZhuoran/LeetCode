/**
 * Median is the middle value in an ordered integer list. If the size of the list is even, there is no middle value.
 * So the median is the mean of the two middle value.
 *
 * For example,
 * [2,3,4], the median is 3
 * [2,3], the median is (2 + 3) / 2 = 2.5
 *
 * Design a data structure that supports the following two operations:
 *   void addNum(int num) - Add a integer number from the data stream to the data structure.
 *   double findMedian() - Return the median of all elements so far.
 *
 * Example:
 * addNum(1)
 * addNum(2)
 * findMedian() -> 1.5
 * addNum(3) 
 * findMedian() -> 2
 *
 * Follow up:
 *   If all integer numbers from the stream are between 0 and 100, how would you optimize it?
 *   If 99% of all integer numbers from the stream are between 0 and 100, how would you optimize it?
 */
 
// Approach #1: Two heaps.
class MedianFinder {
    PriorityQueue<Integer> left;
    PriorityQueue<Integer> right;
    int size;

    /** initialize your data structure here. */
    public MedianFinder() {
        left = new PriorityQueue<>(new Comparator<Integer>() {
            @Override
            public int compare(Integer a, Integer b) {
                return b - a;
            }
        });
        right = new PriorityQueue<>();
        size = 0;
    }
    
    public void addNum(int num) {
        size ++;
        if (size % 2 == 1) {
            if (!right.isEmpty() && right.peek() < num) {
                right.add(num);
                num = right.poll();
            }
            left.add(num);
        } else {
            if (left.peek() > num) {
                left.add(num);
                num = left.poll();
            }
            right.add(num);
        }
    }
    
    public double findMedian() {
        if (size % 2 == 1) {
            return left.peek();
        } else {
            return (left.peek() + right.peek()) / 2.0;
        }
    }
}

/**
 * Your MedianFinder object will be instantiated and called as such:
 * MedianFinder obj = new MedianFinder();
 * obj.addNum(num);
 * double param_2 = obj.findMedian();
 */
